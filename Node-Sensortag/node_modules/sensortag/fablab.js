var util = require('util');
var async = require('async');
var SensorTag = require('./index');
var request = require("request");

SensorTag.discover(function(sensorTag) {

    var connect = function(callback) {
        //console.log('connect');
        sensorTag.connect(callback);
    };
    var discoverServices = function(callback) {
        //console.log('discoverServicesAndCharacteristics');
        sensorTag.discoverServicesAndCharacteristics(callback);
    };
    var readDName = function(callback) {
        //console.log('readDeviceName');
        sensorTag.readDeviceName(function(deviceName) {
            //console.log('\tdevice name = ' + deviceName);
            callback();
        });
    };
    var readDId = function(callback) {
        //console.log('readSystemId');
        sensorTag.readSystemId(function(systemId) {
            //console.log('\tsystem id = ' + systemId);
            callback();
        });
    };
    var readSerial = function(callback) {
        //console.log('readSerialNumber');
        sensorTag.readSerialNumber(function(serialNumber) {
            //console.log('\tserial number = ' + serialNumber);
            callback();
        });
    };
    var readFirmware = function(callback) {
        //console.log('readFirmwareRevision');
        sensorTag.readFirmwareRevision(function(firmwareRevision) {
            //console.log('\tfirmware revision = ' + firmwareRevision);
            callback();
        });
    };
    var readHardware = function(callback) {
        //console.log('readHardwareRevision');
        sensorTag.readHardwareRevision(function(hardwareRevision) {
            //console.log('\thardware revision = ' + hardwareRevision);
            callback();
        });
    };
    var readSoftware = function(callback) {
        //console.log('readSoftwareRevision');
        sensorTag.readHardwareRevision(function(softwareRevision) {
            //console.log('\tsoftware revision = ' + softwareRevision);
            callback();
        });
    };
    var readManufacturer = function(callback) {
        //console.log('readManufacturerName');
        sensorTag.readManufacturerName(function(manufacturerName) {
            //console.log('\tmanufacturer name = ' + manufacturerName);
            callback();
        });
    };

    var enableTemperature = function(callback) {
        console.log('enableIrTemperature');
        sensorTag.enableIrTemperature(callback);
      };

    var enableAccelerometer = function(callback) {
        console.log('enableAccelerometer');
        sensorTag.enableAccelerometer(callback);
    };

    var timeOut = function(callback) {
        setTimeout(callback, 1000);
    };
    var readTemperature = function(callback) {
        i = 0;
        var compt = function(myCall) {
            //console.log('readIrTemperature');
            i++;
            //console.log('i = ' + i);
            myCall();
        };
        var readTemp = function(myCallback) {
            sensorTag.readIrTemperature(function(objectTemperature, ambientTemperature) {
                //console.log('\tobject temperature = %d °C', objectTemperature.toFixed(1));
                //console.log('\tambient temperature = %d °C', ambientTemperature.toFixed(1));

            });
            myCallback();
        };

        var change = function(myCallback) {
            sensorTag.on('irTemperatureChange', function(objectTemperature, ambientTemperature) {
//                //console.log('\tObject temperature = %d °C', objectTemperature.toFixed(1));
//                //console.log('\tambient temperature = %d °C', ambientTemperature.toFixed(1));
            });
            myCallback();
        };
        var notify = function(myCallback) {
            sensorTag.notifyIrTemperature(function() {
            });
            myCallback();
        };
        function some_3secs_function(value, callback) {
            //console.log('Funcion de 3');
            callback();
        }
        function some_5secs_function(value, callback) {
            //console.log('Funcion de 5');
            callback();
        }
        function some_8secs_function(value, callback) {
            //console.log('Funcion de 8');
            callback();
        }

//        //console.log('readIrTemperature');
        sensorTag.readIrTemperature(function(objectTemperature, ambientTemperature) {
            var objTemp = "http://emoncms.org/input/post.json?json={Object temperature:" + objectTemperature.toFixed(1) + "}&apikey=98789ec5f4540b5b43480ff874acc73c";
            var ambTemp = "http://emoncms.org/input/post.json?json={Ambient temperature:" + ambientTemperature.toFixed(1) + "}&apikey=98789ec5f4540b5b43480ff874acc73c";
//            var ambTemp = "http://emoncms.org/node/set.json?nodeid=11&data=" + objectTemperature.toFixed(1) + "," + ambientTemperature.toFixed(1) + "&apikey=98789ec5f4540b5b43480ff874acc73c" + ambientTemperature.toFixed(1) + "}&apikey=98789ec5f4540b5b43480ff874acc73c";
            var logGET = function(error, response, body) {
                //console.log(body);
            };
            request(objTemp, function() {
            });
            request(ambTemp, function() {
            });
            //Decomenter si besoin
            //request(objTemp,logGET());
            ////console.log('\tobject temperature = %d °C', objectTemperature.toFixed(1));
            ////console.log('\tambient temperature = %d °C', ambientTemperature.toFixed(1));
            if (i >= 600)
                callback();
        });

        sensorTag.on('irTemperatureChange', function(objectTemperature, ambientTemperature) {
//            var objTemp = "http://emoncms.org/input/post.json?json={Object temperature:" + objectTemperature.toFixed(1) + "}&apikey=98789ec5f4540b5b43480ff874acc73c";
//            var ambTemp = "http://emoncms.org/input/post.json?json={Ambient temperature:" + ambientTemperature.toFixed(1) + "}&apikey=98789ec5f4540b5b43480ff874acc73c";
////            var ambTemp = "http://emoncms.org/node/set.json?nodeid=11&data=" + objectTemperature.toFixed(1) + "," + ambientTemperature.toFixed(1) + "&apikey=98789ec5f4540b5b43480ff874acc73c" + ambientTemperature.toFixed(1) + "}&apikey=98789ec5f4540b5b43480ff874acc73c";
//            //var ambTemp = "http://emoncms.org/input/post.json?json={Ambient temperature:" + ambientTemperature.toFixed(1) + "}&apikey=98789ec5f4540b5b43480ff874acc73c";
//            var logGET = function(error, response, body) {
//                //console.log(body);
//            };
//            request(objTemp, function() {
//            });
//            request(ambTemp, function() {
//            });
            var date = new Date();
            var dateString = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + 'T' + date.toLocaleTimeString() + ' ';
//		    console.log(dateString+'%d', objectTemperature.toFixed(1));
            console.log(dateString + '%d', ambientTemperature.toFixed(1));
            //console.log(date.getFullYear()+ +' ambient temperature = %d °C', ambientTemperature.toFixed(1));
            //console.log(i++);
            i++;
            if (i >= 600) {
                //               //console.log("Sortie");
                callback();
            }
        });

        sensorTag.notifyIrTemperature(function() {
        });
    };
    var readAccelerometer = function(callback) {
        console.log('readAccelerometer');
        i = 0;
        sensorTag.readAccelerometer(function(x, y, z) {
            var date = new Date();
            var dateString = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + 'T' + date.toLocaleTimeString() + ' ';
            console.log(dateString + '%d\t%d\t%d', x.toFixed(1), y.toFixed(1), z.toFixed(1));
//            console.log(dateString + '\ty = %d G', y.toFixed(1));
//            console.log(dateString + '\tz = %d G \n', z.toFixed(1));
            i++;
            if (i >= 5)
                callback();
        });

        sensorTag.on('accelerometerChange', function(x, y, z) {
            var date = new Date();
            var dateString = date.getFullYear() + '-' + (date.getMonth() + 1) + '-' + date.getDate() + 'T' + date.toLocaleTimeString() + ' ';
            console.log(dateString + '%d\t%d\t%d', x.toFixed(1), y.toFixed(1), z.toFixed(1));
//            console.log(dateString + '\ty = %d G', y.toFixed(1));
//            console.log(dateString + '\tz = %d G \n', z.toFixed(1));
            i++;
            if (i >= 5) {
                callback();
            }
        });

        sensorTag.notifyAccelerometer(function() {

        });
    };
    var disableTemperature = function(callback) {
//        //console.log('disableIrTemperature');
        sensorTag.disableIrTemperature(callback);
    };
    var disableAccelerometer = function(callback) {
        console.log('disableAccelerometer');
        sensorTag.disableAccelerometer(callback);
    };
    var disconnect = function(callback) {
//        //console.log('disconnect');
        sensorTag.disconnect(callback);
    };
    var exit = function() {
        process.exit(0);
    };

    async.series([
        connect,
        discoverServices,
        readDName,
        readDId,
        readSerial,
        readFirmware,
        readHardware,
        readSoftware,
        readManufacturer,
//        Pour lire la temperature
        enableTemperature(),
        timeOut,
        readTemperature,
        disableTemperature,
//        Pour lire l'accelerometre
        enableAccelerometer,
        timeOut,
        readAccelerometer,
        disableAccelerometer,

        disconnect
    ], exit);
});
